---
- name: install smp
  hosts: smp
  remote_user: ansible
  become: yes
  become_user: root

  tasks:
  - name: create smp group
    register: minecraft_group
    ansible.builtin.group:
      name: minecraft

  - name: create smp user
    register: minecraft_user
    ansible.builtin.user:
      name: minecraft
      create_home: no
      group: "{{ minecraft_group.name }}"

  - name: ensure smp base directory
    ansible.builtin.file:
      state: directory
      path: /srv/smp

  - name: create minecraft data directory
    register: data_dir
    ansible.builtin.file:
      state: directory
      path: "/srv/smp/{{ server_name }}"
      owner: "{{ minecraft_user.name }}"
      group: "{{ minecraft_group.name }}"

  - name: write server.properties
    ansible.builtin.template:
      dest: "{{ data_dir.path }}/server.properties"
      src: server.properties.j2
      owner: "{{ minecraft_user.name }}"
      group: "{{ minecraft_group.name }}"

  - name: set whitelist
    set_fact:
      whitelist: []

  - name: add to whitelist
    loop: "{{ whitelist_users }}"
    set_fact:
      whitelist: "{{ whitelist + [item] }}"

  - name: write whitelist.json
    ansible.builtin.copy:
      dest: "{{ data_dir.path }}/whitelist.json"
      content: "{{ whitelist }}"
      owner: "{{ minecraft_user.name }}"
      group: "{{ minecraft_group.name }}"

  - name: set ops
    set_fact:
      ops: []

  - name: add to ops.json
    loop: "{{ ops }}"
    set_fact:
      ops: "{{ ops + [item] }}"

  - name: write ops.json
    ansible.builtin.copy:
      dest: "{{ data_dir.path }}/ops.json"
      content: "{{ ops }}"
      owner: "{{ minecraft_user.name }}"
      group: "{{ minecraft_group.name }}"

  - name: create plugins directory
    ansible.builtin.file:
      dest: "{{ data_dir.path }}/plugins"
      state: directory
      owner: "{{ minecraft_user.name }}"
      group: "{{ minecraft_group.name }}"

  - name: install dynmap
    ansible.builtin.get_url:
      dest: "{{ data_dir.path }}/plugins/dynmap.jar"
      url: "{{ dynmap_download_url }}"
      owner: "{{ minecraft_user.name }}"
      group: "{{ minecraft_group.name }}"
      mode: 0644

  - name: install luckperms
    ansible.builtin.get_url:
      dest: "{{ data_dir.path }}/plugins/luckperms.jar"
      url: "{{ luckperms_download_url }}"
      owner: "{{ minecraft_user.name }}"
      group: "{{ minecraft_group.name }}"
      mode: 0644

  - name: install docker python package
    ansible.builtin.pip:
      name: "{{ item }}"
      state: latest
    with_items:
      - docker
      - docker-compose
      - PyYAML

  - name: start server
    community.docker.docker_compose:
      project_name: smp
      pull: yes
      definition:
        version: '2.4'
        services:
          server:
            image: itzg/minecraft-server
            environment:
              EULA: 'TRUE'
              TYPE: PAPER
              USE_AIKAR_FLAGS: 'true'
              MEMORY: "{{ server_memory }}"
              UID: "{{ minecraft_user.uid }}"
              GID: "{{ minecraft_group.gid }}"
            ports:
              - "25565:25565"
              - "25575:25575"
              - "8123:8123"
            volumes:
              - type: bind
                source: "{{ data_dir.path }}"
                target: /data
            tty: true
            stdin_open: true
            restart: unless-stopped